#Использовать TRun1C
#Использовать configor
#Использовать logos

#Область ОписаниеПеременных

Перем КонтекстВыгрузки;
Перем КонтекстЗагрузки;
Перем КаталогКопий;
Перем ПутьКФайлуКопии;
Перем НастройкиОбщие;
Перем ТолькоВыгрузка;
Перем ВерсияПрилоения;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ПолезнаяРабота()
	ЗагрузитьНастройки();
	СформироватьИмяКопии();	
	ВыгрузитьБазу();
	Если Не ТолькоВыгрузка Тогда
		ЗагрузитьБазу();
	КонецЕсли;
КонецПроцедуры

Процедура ЗагрузитьНастройки()

	МенеджерПараметров = Новый МенеджерПараметров();
	МенеджерПараметров.АвтоНастройка("config");
	МенеджерПараметров.УстановитьФайлПараметров("env.json");
	МенеджерПараметров.Прочитать();
	
	Если МенеджерПараметров.ЧтениеВыполнено() Тогда
		НастройкиОбщие = МенеджерПараметров.Параметр("Настройки.Общие");
		
		КаталогКопий = НастройкиОбщие["КаталогКопий"];
		ТолькоВыгрузка = НастройкиОбщие["ТолькоВыгрузка"];
		НастройкиКонтекстВыгрузки = МенеджерПараметров.Параметр("Настройки.КонтекстВыгрузки");
		ЗаполнитьКонтекст(КонтекстВыгрузки, НастройкиКонтекстВыгрузки);
		Если Не ТолькоВыгрузка Тогда
			НастройкиКонтекстЗагрузки = МенеджерПараметров.Параметр("Настройки.КонтекстЗагрузки");
			ЗаполнитьКонтекст(КонтекстЗагрузки, НастройкиКонтекстЗагрузки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
Процедура ЗаполнитьКонтекст(Контекст, Настройки)
	
	Контекст = Новый ТУправлениеЗапуском1С();

	Для Каждого Элем Из Настройки Цикл
		Контекст.ПараметрыЗапуска[Элем.Ключ] = Элем.Значение;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьИмяКопии()

	ИмяФайлаКопии = КонтекстВыгрузки.ИмяФайлаПоИмениБазыНаДату("dt");
	ПутьКФайлуКопии = ОбъединитьПути(КаталогКопий, ИмяФайлаКопии);

КонецПроцедуры
#КонецОбласти

Процедура ВыгрузитьБазу()
	
	Если НастройкиОбщие["ЗавершатьСеансы"] Тогда
		КонтекстВыгрузки.ЗавершитьРаботуПользователей();
	КонецЕсли;

	Если НастройкиОбщие["БлокироватьВход"] Тогда
		КонтекстВыгрузки.УстановитьБлокировкуНачалаСеансов(Истина);
	КонецЕсли;
	
	КонтекстВыгрузки.ВыгрузитьИнформационнуюБазу(ПутьКФайлуКопии);
	
	Если НастройкиОбщие["БлокироватьВход"] Тогда
		КонтекстВыгрузки.СнятьБлокировкуНачалаСеансов(Истина);
	КонецЕсли;

КонецПроцедуры

Процедура ЗагрузитьБазу()
	
	Если НастройкиОбщие["ЗавершатьСеансы"] Тогда
		КонтекстЗагрузки.ЗавершитьРаботуПользователей();
	КонецЕсли;
	
	Если НастройкиОбщие["БлокироватьВход"] Тогда
		КонтекстЗагрузки.УстановитьБлокировкуНачалаСеансов(Истина);
	КонецЕсли;

	КонтекстЗагрузки.ЗагрузитьИнформационнуюБазу(ПутьКФайлуКопии);

	Если НастройкиОбщие["БлокироватьВход"] Тогда
		КонтекстЗагрузки.СнятьБлокировкуНачалаСеансов(Истина);
	КонецЕсли;

КонецПроцедуры

ВерсияПриложения = "0.3 alpha";
ПолезнаяРабота();